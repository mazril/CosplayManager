<mah:MetroWindow x:Class="CosplayManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CosplayManager"
        xmlns:viewModels="clr-namespace:CosplayManager.ViewModels"
        xmlns:models="clr-namespace:CosplayManager.Models"
        xmlns:converters="clr-namespace:CosplayManager.Converters"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        mc:Ignorable="d"
        Title="Cosplay Manager Pro" Height="768" Width="1280"
        d:DataContext="{d:DesignInstance Type=viewModels:MainWindowViewModel, IsDesignTimeCreatable=True}"
        GlowBrush="{DynamicResource MahApps.Brushes.Accent}"
        WindowStartupLocation="CenterScreen">

    <mah:MetroWindow.Resources>
        <converters:StringCollectionToStringConverter x:Key="StringCollectionConverter"/>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <converters:CategoryProfileToCharacterNameConverter x:Key="CategoryProfileToCharacterNameConverter"/>
        <converters:NullToBoolConverter x:Key="NullToBoolConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <HierarchicalDataTemplate DataType="{x:Type viewModels:ModelDisplayViewModel}" ItemsSource="{Binding CharacterProfiles}">
            <StackPanel Orientation="Horizontal" 
                        Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}">
                <StackPanel.ContextMenu>
                    <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                        <MenuItem Command="{Binding MatchModelSpecificCommand}"
                                  CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                            <MenuItem.Header>
                                <TextBlock>
                                    <Run Text="Dopasuj dla "/>
                                    <Run Text="{Binding Path=PlacementTarget.DataContext.ModelName, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                </TextBlock>
                            </MenuItem.Header>
                        </MenuItem>
                        <Separator />
                        <MenuItem Command="{Binding RemoveModelTreeCommand}"
                                  CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                            <MenuItem.Header>
                                <TextBlock>
                                    <Run Text="Usuń Całą Modelkę: "/>
                                    <Run Text="{Binding Path=PlacementTarget.DataContext.ModelName, RelativeSource={RelativeSource AncestorType=ContextMenu}}" FontWeight="Bold"/>
                                </TextBlock>
                            </MenuItem.Header>
                        </MenuItem>
                    </ContextMenu>
                </StackPanel.ContextMenu>
                <TextBlock Text="{Binding ModelName}" FontWeight="Bold"/>
                <TextBlock Text=" (" Foreground="DarkGoldenrod"/>
                <TextBlock Text="{Binding CharacterProfiles.Count}" Foreground="DarkGoldenrod"/>
                <TextBlock Text=" postaci)" Foreground="DarkGoldenrod"/>
                <TextBlock Text=" [" Foreground="ForestGreen" Margin="5,0,0,0"
                             Visibility="{Binding HasPendingSuggestions, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBlock Text="{Binding PendingSuggestionsCount}" Foreground="ForestGreen"
                             Visibility="{Binding HasPendingSuggestions, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBlock Text=" sugestii]" Foreground="ForestGreen"
                             Visibility="{Binding HasPendingSuggestions, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </StackPanel>
        </HierarchicalDataTemplate>

        <DataTemplate DataType="{x:Type models:CategoryProfile}">
            <StackPanel Orientation="Horizontal"
                        Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}">
                <StackPanel.ContextMenu>
                    <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                        <MenuItem Header="Sprawdź Sugestie dla tej Postaci"
                                  Command="{Binding CheckCharacterSuggestionsCommand}"
                                  CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        <Separator/>
                        <MenuItem Header="Usuń Profil Postaci" 
                                  Command="{Binding RemoveProfileCommand}" 
                                  CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    </ContextMenu>
                </StackPanel.ContextMenu>
                <TextBlock Text="{Binding Converter={StaticResource CategoryProfileToCharacterNameConverter}}"/>
                <TextBlock Text=" (" Foreground="Gray"/>
                <TextBlock Text="{Binding ImageCountInProfile}" Foreground="Gray"/>
                <TextBlock Text=" obr." Foreground="Gray"/>
                <TextBlock Text=" +" Foreground="ForestGreen" Margin="1,0,0,0"
                             Visibility="{Binding HasPendingSuggestions, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBlock Text="{Binding PendingSuggestionsCount}" Foreground="ForestGreen"
                             Visibility="{Binding HasPendingSuggestions, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBlock Text=")" Foreground="Gray"/>
            </StackPanel>
        </DataTemplate>

    </mah:MetroWindow.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0">
            <MenuItem Header="_Plik">
                <MenuItem Header="_Wybierz główny folder biblioteki..." Command="{Binding SelectLibraryPathCommand}"/>
                <MenuItem Header="_Zapisz ustawienia aplikacji" Command="{Binding SaveAppSettingsCommand}"/>
                <Separator/>
                <MenuItem Header="Testuj Połączenie CLIP" x:Name="TestClipMenuItem" Click="TestClipButton_Click" ToolTip="Sprawdza, czy serwer CLIP działa i może przetworzyć obraz."/>
                <Separator/>
                <MenuItem Header="_Zakończ" Click="ExitMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="_Profile">
                <MenuItem Header="_Załaduj Profile Kategorii" Command="{Binding LoadProfilesCommand}"/>
                <MenuItem Header="_Zapisz Wszystkie Profile Kategorii" Command="{Binding SaveProfilesCommand}" IsEnabled="{Binding AnyProfilesLoaded}"/>
                <Separator/>
                <MenuItem Header="Automatycznie Utwórz/Aktualizuj Profile z Biblioteki" Command="{Binding AutoCreateProfilesCommand}"
                          ToolTip="Przeskanuje foldery modelek i postaci w bibliotece, tworząc profile."
                          IsEnabled="{Binding LibraryRootPath, Converter={StaticResource NullToBoolConverter}}"/>
                <Separator/>
                <MenuItem Header="Zasugeruj Przeniesienie Obrazów (Cała Biblioteka)" Command="{Binding SuggestImagesCommand}"
                          ToolTip="Przeskanuje foldery 'Mix' (lub inne skonfigurowane) we wszystkich folderach modelek i zaproponuje przeniesienie obrazów do odpowiednich folderów postaci."
                          IsEnabled="{Binding AnyProfilesLoaded}"/>
            </MenuItem>
        </Menu>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" BorderBrush="LightGray" BorderThickness="0,0,1,0" Padding="5">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Top" Text="Profile Kategorii (Modelki / Postaci):" FontWeight="SemiBold" Margin="0,0,0,5"/>
                    <TreeView x:Name="ProfilesTreeView"
                              ItemsSource="{Binding HierarchicalProfilesList}"
                              SelectedItemChanged="ProfilesTreeView_SelectedItemChanged">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                                <Setter Property="Padding" Value="3"/>
                                <Setter Property="Margin" Value="0,1"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </TreeView>
                </DockPanel>
            </Border>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Background="LightGray"/>

            <ScrollViewer Grid.Column="2" VerticalScrollBarVisibility="Auto" Padding="10">
                <StackPanel>
                    <StackPanel IsEnabled="{Binding IsProfileSelected}">
                        <TextBlock Text="Edycja Profilu Postaci:" FontSize="16" FontWeight="Bold" Margin="0,0,0,10"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="Nazwa Modelki:" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding ModelNameInput, UpdateSourceTrigger=PropertyChanged}" Margin="5" />
                            <Button Grid.Row="0" Grid.Column="2" Content="Nowy Profil" Command="{Binding CreateNewProfileSetupCommand}" Margin="5,5,0,5" ToolTip="Rozpocznij tworzenie nowego profilu postaci"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="Nazwa Postaci:" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding CharacterNameInput, UpdateSourceTrigger=PropertyChanged}" Margin="5" />

                            <Label Grid.Row="2" Grid.Column="0" Content="Pełna Nazwa Profilu:" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding CurrentProfileNameForEdit, Mode=OneWay}" Margin="5" IsReadOnly="True" FontWeight="SemiBold"/>

                            <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Text="Obrazy dla tego profilu:" Margin="0,10,0,5"/>
                            <ListView Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" ItemsSource="{Binding ImageFiles}" MaxHeight="250" Margin="0,0,0,10" BorderBrush="Gray" BorderThickness="1">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Nazwa Pliku" DisplayMemberBinding="{Binding FileName}" Width="Auto"/>
                                    </GridView>
                                </ListView.View>
                            </ListView>

                            <StackPanel Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Right">
                                <Button Content="Dodaj Obrazy..." Command="{Binding AddFilesToProfileCommand}" Margin="5"/>
                                <Button Content="Wyczyść Listę Obrazów" Command="{Binding ClearFilesFromProfileCommand}" Margin="5"
                                        IsEnabled="{Binding ImageFiles.Count, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <Button Content="Generuj/Aktualizuj Profil" Command="{Binding GenerateProfileCommand}" Margin="5" FontWeight="Bold" Background="LightGreen"/>
                                <Button Content="Usuń Profil Postaci" Command="{Binding RemoveProfileCommand}" Margin="15,5,5,5" Background="LightCoral" IsEnabled="{Binding IsProfileSelected}"/>
                            </StackPanel>
                        </Grid>
                    </StackPanel>

                    <Expander Header="Ustawienia Zaawansowane Aplikacji" Margin="0,20,0,0" IsExpanded="{Binding AreAdvancedSettingsExpanded, Mode=TwoWay}">
                        <StackPanel Margin="10">
                            <TextBlock Text="Ścieżka do głównego folderu biblioteki:" Margin="0,0,0,2"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Text="{Binding LibraryRootPath, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,5,0" IsReadOnly="True"/>
                                <Button Grid.Column="1" Content="..." Command="{Binding SelectLibraryPathCommand}" ToolTip="Wybierz główny folder biblioteki"/>
                            </Grid>

                            <TextBlock Text="Nazwy folderów źródłowych (Mix, oddzielone przecinkiem):" Margin="0,10,0,2"/>
                            <TextBox Text="{Binding SourceFolderNamesInput, UpdateSourceTrigger=PropertyChanged}" ToolTip="Np. Mix,Mieszane,Unsorted"/>

                            <TextBlock Text="Próg podobieństwa dla sugestii (0.0 - 1.0):" Margin="0,10,0,2"/>
                            <mah:NumericUpDown Value="{Binding SuggestionSimilarityThreshold, UpdateSourceTrigger=PropertyChanged}" Minimum="0.1" Maximum="1.0" Interval="0.01" StringFormat="F2" Margin="0,0,0,10"/>

                            <Button Content="Zapisz Ustawienia Aplikacji" Command="{Binding SaveAppSettingsCommand}" HorizontalAlignment="Left" Margin="0,10,0,0"/>
                        </StackPanel>
                    </Expander>

                </StackPanel>
            </ScrollViewer>
        </Grid>

        <StatusBar Grid.Row="2">
            <StatusBarItem>
                <TextBlock x:Name="StatusTextBlock" Text="{Binding StatusMessage, Mode=OneWay}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</mah:MetroWindow>