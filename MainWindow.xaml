<mah:MetroWindow x:Class="CosplayManager.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 mc:Ignorable="d"
                 Title="Cosplay Manager" Height="720" Width="1280"
                 
                 xmlns:local="clr-namespace:CosplayManager"
                 xmlns:viewmodels="clr-namespace:CosplayManager.ViewModels"
                 xmlns:models="clr-namespace:CosplayManager.Models"
                 xmlns:converters="clr-namespace:CosplayManager.Converters"
                 
                 d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel, IsDesignTimeCreatable=True}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
            </ResourceDictionary.MergedDictionaries>

            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <converters:CategoryProfileToCharacterNameConverter x:Key="CategoryProfileToCharacterNameConverter"/>

            <HierarchicalDataTemplate DataType="{x:Type viewmodels:ModelDisplayViewModel}" ItemsSource="{Binding CharacterProfiles}">
                <StackPanel Orientation="Horizontal">
                    <StackPanel.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Dopasuj obrazy dla tej modelki" 
                                      Command="{Binding DataContext.MatchModelSpecificCommand, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" 
                                      CommandParameter="{Binding}"/>
                            <MenuItem Header="{Binding ModelName, StringFormat='Podziel profil modelki {}...'}" 
                                      Command="{Binding DataContext.AnalyzeModelForSplittingCommand, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" 
                                      CommandParameter="{Binding}"/>
                            <Separator />
                            <MenuItem Header="Usuń całą modelkę (i jej profile)" 
                                      Command="{Binding DataContext.RemoveModelTreeCommand, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" 
                                      CommandParameter="{Binding}"/>
                        </ContextMenu>
                    </StackPanel.ContextMenu>

                    <TextBlock Text="{Binding ModelName}" FontWeight="Bold" />
                    <TextBlock Text=" (" Foreground="Gray"/>
                    <TextBlock Text="{Binding CharacterProfiles.Count}" Foreground="Gray"/>
                    <TextBlock Text=" profili" Foreground="Gray"/>
                    <TextBlock Text=", " Foreground="Gray" Visibility="{Binding HasPendingSuggestions, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <TextBlock Text="{Binding PendingSuggestionsCount}" Foreground="OrangeRed" Visibility="{Binding HasPendingSuggestions, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <TextBlock Text=" sugestii" Foreground="Gray" Visibility="{Binding HasPendingSuggestions, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <TextBlock Text=")" Foreground="Gray"/>
                </StackPanel>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate DataType="{x:Type models:CategoryProfile}">
                <StackPanel Orientation="Horizontal">
                    <StackPanel.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Sprawdź sugestie dla tej postaci" 
                                      Command="{Binding DataContext.CheckCharacterSuggestionsCommand, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" 
                                      CommandParameter="{Binding}"/>
                            <MenuItem Header="Zaproponuj podział tej postaci..."
                                      Command="{Binding DataContext.OpenSplitProfileDialogCommand, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"
                                      CommandParameter="{Binding}"
                                      Visibility="{Binding HasSplitSuggestion, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <Separator />
                            <MenuItem Header="Usuń ten profil postaci" 
                                      Command="{Binding DataContext.RemoveProfileCommand, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}" 
                                      CommandParameter="{Binding}"/>
                        </ContextMenu>
                    </StackPanel.ContextMenu>

                    <TextBlock Text="P " Foreground="Blue" FontWeight="Bold" Margin="0,0,3,0"
                               Visibility="{Binding HasSplitSuggestion, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <TextBlock Text="{Binding Converter={StaticResource CategoryProfileToCharacterNameConverter}}" />
                    <TextBlock Text=" (" Foreground="DarkGray"/>
                    <TextBlock Text="{Binding ImageCountInProfile}" Foreground="DarkGray"/>
                    <TextBlock Text=" obr." Foreground="DarkGray"/>
                    <TextBlock Text=", " Foreground="DarkGray" Visibility="{Binding HasPendingSuggestions, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <TextBlock Text="{Binding PendingSuggestionsCount}" Foreground="OrangeRed" Visibility="{Binding HasPendingSuggestions, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <TextBlock Text=" sugestii" Foreground="DarkGray" Visibility="{Binding HasPendingSuggestions, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <TextBlock Text=")" Foreground="DarkGray"/>
                </StackPanel>
            </HierarchicalDataTemplate>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_Plik">
                    <MenuItem Header="_Zapisz ustawienia" Command="{Binding SaveAppSettingsCommand}"/>
                    <MenuItem Header="Wyjdź" Name="ExitMenuItem" Click="ExitMenuItem_Click"/>
                </MenuItem>
                <MenuItem Header="_Profile">
                    <MenuItem Header="Załaduj profile" Command="{Binding LoadProfilesCommand}"/>
                    <MenuItem Header="Zapisz wszystkie profile" Command="{Binding SaveProfilesCommand}"/>
                    <MenuItem Header="Automatycznie utwórz/zaktualizuj profile" Command="{Binding AutoCreateProfilesCommand}"/>
                </MenuItem>
                <MenuItem Header="_Sugestie">
                    <MenuItem Header="Sugeruj globalnie (wszystkie modelki)" Command="{Binding SuggestImagesCommand}"/>
                </MenuItem>
                <MenuItem Header="_Narzędzia">
                    <MenuItem Header="Test CLIP Service" Name="TestClipMenuItem" Click="TestClipButton_Click"/>
                </MenuItem>
            </Menu>

            <StatusBar DockPanel.Dock="Bottom">
                <StatusBarItem>
                    <TextBlock Name="StatusTextBlock" Text="{Binding StatusMessage}"/>
                </StatusBarItem>
            </StatusBar>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="350" MaxWidth="600"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <GroupBox Header="Profile" Grid.Column="0" Margin="5" Padding="5">
                    <TreeView Name="ProfilesTreeView" 
                              ItemsSource="{Binding HierarchicalProfilesList}"
                              SelectedItemChanged="ProfilesTreeView_SelectedItemChanged">
                    </TreeView>
                </GroupBox>

                <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="LightGray"/>

                <TabControl Grid.Column="2" Margin="5">
                    <TabItem Header="Edytor Profilu">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel Margin="10" IsEnabled="{Binding IsProfileSelected}">
                                <TextBlock Text="Nazwa Modelki:" Margin="0,0,0,2"/>
                                <TextBox Text="{Binding ModelNameInput, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                                <TextBlock Text="Nazwa Postaci/Kategorii (może być wieloczęściowa oddzielona ' - '):" Margin="0,0,0,2"/>
                                <TextBox Text="{Binding CharacterNameInput, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>

                                <TextBlock Text="Pełna Nazwa Profilu (generowana):" Margin="0,0,0,2"/>
                                <TextBox Text="{Binding CurrentProfileNameForEdit, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" IsReadOnly="True" Background="#FFE0E0E0" Margin="0,0,0,10"/>

                                <TextBlock Text="Obrazy źródłowe dla profilu:" Margin="0,10,0,5"/>
                                <ListView ItemsSource="{Binding ImageFiles}" MaxHeight="200" BorderBrush="Gray" BorderThickness="1">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding FileName}"/>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                                <StackPanel Orientation="Horizontal" Margin="0,5,0,10">
                                    <Button Content="Dodaj obrazy..." Command="{Binding AddFilesToProfileCommand}" Margin="0,0,5,0"/>
                                    <Button Content="Wyczyść listę obrazów" Command="{Binding ClearFilesFromProfileCommand}"/>
                                </StackPanel>

                                <Button Content="Utwórz / Aktualizuj Profil" Command="{Binding GenerateProfileCommand}" FontWeight="Bold" Margin="0,10,0,0" Padding="10,5"/>
                                <Button Content="Usuń Zaznaczony Profil" Command="{Binding RemoveProfileCommand}" CommandParameter="{Binding SelectedProfile}" Margin="0,5,0,0" Padding="10,5"
                                        IsEnabled="{Binding IsProfileSelected}"/>
                                <Button Content="Przygotuj Nowy Profil" Command="{Binding CreateNewProfileSetupCommand}" Margin="0,20,0,0" Padding="10,5"/>
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="Ustawienia Zaawansowane">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel Margin="10">
                                <TextBlock Text="Główny folder biblioteki:" Margin="0,0,0,2"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Text="{Binding LibraryRootPath, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,5,0"/>
                                    <Button Grid.Column="1" Content="..." Command="{Binding SelectLibraryPathCommand}" Width="30"/>
                                </Grid>

                                <TextBlock Text="Nazwy folderów źródłowych (Mix, oddzielone przecinkiem):" Margin="0,10,0,2"/>
                                <TextBox Text="{Binding SourceFolderNamesInput, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"
                                         AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" MinHeight="40"/>

                                <TextBlock Text="{Binding SuggestionSimilarityThreshold, StringFormat='Próg podobieństwa dla sugestii: {0:F2}'}" Margin="0,10,0,2"/>
                                <Slider Minimum="0.5" Maximum="1.0" SmallChange="0.01" LargeChange="0.05"
                                        Value="{Binding SuggestionSimilarityThreshold}" Margin="0,0,0,10"/>

                                <Button Content="Zapisz Ustawienia Aplikacji" Command="{Binding SaveAppSettingsCommand}" Margin="0,20,0,0"/>

                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>
                </TabControl>
            </Grid>
        </DockPanel>
    </Grid>
</mah:MetroWindow>